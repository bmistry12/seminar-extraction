<paragraph></paragraph>

<paragraph><sentence>				SPECIAL SEMINAR</sentence></paragraph>

<paragraph><sentence> Speaker:  Leslie Lamport
           Digital Equipment Corporation
           Systems Research Center</sentence></paragraph>

<paragraph><sentence> Date:     Tuesday, April 28
 Time:     <stime>3:30</stime> pm
 Place:    Wean Hall 4623
 Topic:    The Temporal Logic of Actions</sentence></paragraph>

<paragraph><sentence>Traditional verification employs a programming language for writing the 
program, and a logic for expressing its properties.</sentence><sentence>When verifying 
concurrent programs, we reason about an abstract program that is not meant 
to be directly compiled and executed, so we don't have to use a programming 
language.</sentence><sentence>Contrary to what one might conclude from the literature, logic 
can be simpler than programming languages.</sentence><sentence>With the right logic, it is 
easy to express a program as a logical formula.</sentence><sentence>The distinction between 
properties and programs then vanishes, and specifications can be written 
as simple programs.</sentence><sentence>Proving that one program implements another is no 
different from proving that a program satisfies a property.</sentence></paragraph>

<paragraph><sentence>The temporal logic of actions is the right logic.</sentence><sentence>It provides a tool that 
can help us cope with the complexity of verifying real concurrent algorithms.</sentence></paragraph>

<paragraph><sentence>No previous fondess for logic is assumed.</sentence></paragraph>