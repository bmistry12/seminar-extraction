<paragraph><sentence>                                POP SEMINAR</sentence></paragraph>

<paragraph><sentence>                       THE TOPOLOGY OF SET CONSENSUS</sentence></paragraph>

<paragraph><sentence>                              Maurice Herlihy</sentence></paragraph>

<paragraph><sentence>                             Brown University</sentence></paragraph>

<paragraph><sentence>                         Friday, December 2, 1994</sentence></paragraph>

<paragraph><sentence>                    WeH 8220      3:00 p.m. - 4:30 p.m.
     Modern shared-memory multiprocessors are inherently asynchronous:
     processes can be halted or delayed without warning by interrupts,
     pre-emption,  or  cache  misses.</sentence><sentence>In  such  environments, it is
     desirable to design protocols that  are  wait-free:  any  process
     that continues to run will complete its work in a fixed number of
     steps, regardless of delays or failures by other processes.</sentence></paragraph>

<paragraph><sentence>     In the past  few  years,  considerable  progress  has  been  made
     understanding   wait-free   protocols   for   systems   in  which
     asynchronous processes communicate by reading and writing  shared
     variables.</sentence><sentence>Nevertheless, relatively little is known about such
     protocols in systems in which processes communicate with  certain
     more powerful synchronization primitives such as test-and-set, or
     fetch-and-add.</sentence><sentence>This question has some practical interest,  since
     many  modern  multiprocessor architectures provide these kinds of
     built-in primitives.</sentence></paragraph>

<paragraph><sentence>     Some recent partial progress on this question is reviewed.</sentence><sentence>Set
     consensus,  a  simple  generalization of the well-known consensus
     problem  is  considered.</sentence><sentence>Any  synchronization  problem  has  a
     characteristic  geometric structure, called a simplicial complex,
     whose topological properties determine  the  circumstances  under
     which  it  has  a  wait-free protocol.</sentence><sentence>It is first shown that no
     synchronization primitive can  implement  set  consensus  if  the
     primitive's  associated  complex  lacks ``holes'' of sufficiently
     small dimension.</sentence><sentence>Then it is shown that  any  protocol  employing
     set  consensus  as  a  primitive  has itself no ``holes'' below a
     certain dimension, partially characterizing the problems  it  can
     solve.</sentence><sentence>Some suggestive connections between consensus numbers and
     homology closes this discussion.</sentence></paragraph>

<paragraph><sentence>      Note: Joint work with Sergio Rajsbaum, MIT.</sentence></paragraph>

<paragraph><sentence>     If you would like to talk with Professor Herlihy, please  contact
     Marge at 85025 or mp3r@cs for available times.</sentence></paragraph>